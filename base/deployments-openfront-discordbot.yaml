apiVersion: apps/v1
kind: Deployment
metadata:
  name: openfront-api-discordbot
  namespace: tk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openfront-api-discordbot
  template:
    metadata:
      labels:
        app: openfront-api-discordbot
        servicegroup: "mine"
    spec:
      serviceAccountName: openfront-api-discordbot
      containers:
      - name: openfront-api-discordbot
        image: bot:latest
        imagePullPolicy: Always
        ports:
        - containerPort: &port 3000
        env:
        - name: PORT
          value: "3000"
        - name: DISCORD_TOKEN
          valueFrom:
            secretKeyRef:
              name: openfront-api-discordbot-creds
              key: DISCORD_TOKEN
        - name: CLIENT_ID
          value: "1399816018464870572"
        - name: ALERT_CHANNEL_ID
          value: "1399817136213327965"
        - name: CHANNEL_ID_INFOBOARD
          value: "1404272671088316558"
        - name: SUPABASE_TOKEN
          valueFrom:
            secretKeyRef:
              name: supabase-db
              key: token
        - name: ANALYSIS_TOKEN
          valueFrom:
            secretKeyRef:
              name: analysis
              key: token
        
        resources:
          requests:
            memory: "100Mi"
            cpu: "20m"
          limits:
            memory: "300Mi"
            cpu: "100m"

        livenessProbe:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 30
          periodSeconds: 6
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: openfront-api-discordbot
  namespace: tk
spec:
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: openfront-api-discordbot
# This route maps tkbot.openfront.pro to the above service
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: openfront-api-discordbot
spec:
  parentRefs:
  - name: apps-gateway
  hostnames:
  - "tkbot.openfront.pro"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
      # name of the service
    - name: openfront-api-discordbot
      port: 80
      namespace: tk
---

### Namespaces, service accounts, roles, and role bindings ###



---
# Add the namspace "tk"
apiVersion: v1
kind: Namespace
metadata:
  name: tk
  labels:
    name: tk
    servicegroup: "mine"
---
# We need a referencegrant because cafe is in the default namespace and the service is in tk namespace
apiVersion: gateway.networking.k8s.io/v1beta1
kind: ReferenceGrant
metadata:
  name: openfront-api-discordbot-grant
  namespace: tk
spec:
  from:
  - kind: HTTPRoute
    group: gateway.networking.k8s.io
    namespace: default
  to:
  - kind: Service
    group: ""

# This is the service account for the deployment
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: openfront-api-discordbot
  namespace: tk
  labels:
    servicegroup: "mine"
    app: openfront-api-discordbot

# Super-admin role for tk namespace with full privileges
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tk-user-role
  namespace: tk
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apps", "batch", "extensions", "networking.k8s.io", "rbac.authorization.k8s.io", "policy", "gateway.networking.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tk-user-rolebinding
  namespace: tk
subjects:
# Adjust subjects as needed; placeholder shows typical options
- kind: ServiceAccount
  name: openfront-api-discordbot
  namespace: tk
- kind: Group
  name: tk-admins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tk-user-role

# Add the role and rolebinding for role used the pod here. The actual service doesnt need much
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: openfront-api-discordbot-role
  namespace: tk
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "services", "httproutes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: openfront-api-discordbot-rolebinding
  namespace: tk
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: openfront-api-discordbot-role
subjects:
- kind: ServiceAccount
  name: openfront-api-discordbot
  namespace: tk
# This is the deplyoment of the container defined in https://github.com/TKTK123456/openfrontAPIDiscordBots or not always up to date https://github.com/2143-labs/openfrontAPIDiscordBots
---
