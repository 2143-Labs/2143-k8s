apiVersion: apps/v1
kind: Deployment
metadata:
  name: openfront-pro-simulation-api
spec:
  selector:
    matchLabels:
      app: openfront-pro-simulation-api
  template:
    metadata:
      labels:
        app: openfront-pro-simulation-api
        servicegroup: "mine"
    spec:
      containers:
      - name: openfront-pro-simulation-api
        image: openfrontpro-sim:latest
        imagePullPolicy: Always
        ports:
        - containerPort: &port 3000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: openfront-pro-db
              key: DATABASE_URL
        - name: PORT
          value: "3000"
        - name: RUN_SERVER
          value: "true"

        resources:
          requests:
            memory: "800Mi"
            cpu: "300m"
          limits:
            memory: "1000Mi"
            cpu: "500m"

        livenessProbe:
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 1
          periodSeconds: 10
          failureThreshold: 25

        readinessProbe:
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 1
          periodSeconds: 5
          failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openfront-pro-simulation-worker
spec:
  selector:
    matchLabels:
      app: openfront-pro-simulation-worker
  template:
    metadata:
      labels:
        app: openfront-pro-simulation-worker
        servicegroup: "mine"
    spec:
      containers:
      - name: openfront-pro-simulation-worker
        image: openfrontpro-sim:latest
        imagePullPolicy: Always
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: openfront-pro-db
              key: DATABASE_URL

        resources:
          requests:
            memory: "800Mi"
            cpu: "300m"
          limits:
            memory: "1000Mi"
            cpu: "500m"

        #livenessProbe:
          #httpGet:
            #path: /health
            #port: *port
          #initialDelaySeconds: 1
          #periodSeconds: 1
          #failureThreshold: 25

        #readinessProbe:
          #httpGet:
            #path: /health
            #port: *port
          #initialDelaySeconds: 1
          #periodSeconds: 5
          #failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openfront-pro
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openfront-pro
  template:
    metadata:
      labels:
        app: openfront-pro
        servicegroup: "mine"
    spec:
      containers:
      - name: openfront-pro
        image: openfrontpro:latest
        imagePullPolicy: Always
        ports:
        - containerPort: &port 3000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: openfront-pro-db
              key: DATABASE_URL
        - name: PORT
          value: "3000"
        - name: DISCORD_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: discord-oauth
              key: DISCORD_CLIENT_SECRET
        - name: DISCORD_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: discord-oauth
              key: DISCORD_CLIENT_ID
        - name: DISCORD_REDIRECT_URI
          value: https://openfront.pro/oauth/discord/callback
        - name: USERAGENT
          value: "openfront-pro-crawler"
        #- name: USERAGENT
          #valueFrom:
            #secretKeyRef:
              #name: openfront-pro-creds
              #key: USERAGENT
        #- name: COOKIE
          #valueFrom:
            #secretKeyRef:
              #name: openfront-pro-creds
              #key: COOKIE
        - name: DISABLE_TASKS
          value: "look-for-openfront-lobbies"
        - name: OPENFRONT_LOBBY_URL
          value: https://openfront.io/api/public_lobbies

        resources:
          requests:
            memory: "700Mi"
            cpu: "1000m"
          limits:
            memory: "1000Mi"
            cpu: "1000m"

        livenessProbe:
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 1
          periodSeconds: 1
          failureThreshold: 25

        readinessProbe:
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 1
          periodSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: openfront-pro-simulation-api
spec:
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: openfront-pro-simulation-api
---
apiVersion: v1
kind: Service
metadata:
  name: openfront-pro
spec:
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: openfront-pro
---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-ofp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-ofp
  template:
    metadata:
      labels:
        app: postgres-ofp
        servicegroup: "mine"
    spec:
      volumes:
      - name: postgres-ofpdata
        #emptyDir:
          #sizeLimit: 50Mi
        persistentVolumeClaim:
          claimName: postgres-ofp-pvc

      containers:
      - name: postgres-ofp
        image: postgres:latest
        ports:
        - containerPort: 5432

        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: openfront-pro-db
              key: POSTGRES_PASSWORD
        # Initial DB: openfrontpro
        - name: POSTGRES_DB
          value: openfrontpro

        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-ofpdata
          subPath: ofp-data/

        resources:
          limits:
            memory: "2000Mi"
            cpu: "1500m"
          requests:
            cpu: "1000m"
            memory: "2000Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-ofp
spec:
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: http
  selector:
    app: postgres-ofp
